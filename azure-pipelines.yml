name: $(Date:yyyyMMdd).$(Rev:.r)

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    #windows:
    #  imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

trigger:
- master

variables:
  buildConfiguration: 'Release'

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: '927afb1a-f6f6-430b-b477-a0007d55b46c'
    cliProjectKey: 'SynkerAPI'
    cliProjectName: 'SynkerAPI'
    organization: 'fazzani-github'
    scannerMode: 'CLI'
    configMode: 'manual'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage/coverage.opencover.xml'

- script: dotnet restore
  displayName: 'dotnet restore $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build $(buildConfiguration)'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--no-restore --configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test $(buildConfiguration)'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--logger trx --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    nobuild: true

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: SonarCloudPublish@1
  inputs:
    cliProjectKey: 'SynkerAPI'
    cliProjectName: 'SynkerAPI'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish $(buildConfiguration)'
  inputs:
    command: publish
    projects: Synker.Api/Synker.Api.csproj
    arguments: ' --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true
    publishWebProjects: false
    modifyOutputPath: true

- task: PublishBuildArtifacts@1